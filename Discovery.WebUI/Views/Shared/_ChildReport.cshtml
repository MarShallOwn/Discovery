@model Discovery.Core.VIewModels.ParentUserChildViewModel

<h4>Parent</h4>
<hr />

<div class="row">
    <div class="col-md-6">
        <div class="col-md-7">
            <h3 class="text-center">Parent Info</h3>
        </div>
        <dl class="col-md-12 dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.user.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.user.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.user.LastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.user.LastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.user.Email)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.user.Email)
            </dd>
        </dl>
    </div>
    <div class="col-md-6">

        <div class="col-md-7">
            <h3 class="text-center">Child Info</h3>
        </div>

        <dl class="col-md-12 dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.child.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.child.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.child.LastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.child.LastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.child.Age)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.child.Age)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.child.Grade)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.child.Grade)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.child.Degree)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.child.Degree)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.child.Disability_Type)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.child.Disability_Type)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.child.ClassRoom)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.child.ClassRoom)
            </dd>

        </dl>
    </div>
</div>

@using (Html.BeginForm("Edit", "Parent", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.parent.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.parent.Child_Weekly_Report, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.parent.Child_Weekly_Report, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.parent.Child_Weekly_Report, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Child")
</div>
